name: Build and deploy snapshot

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      oracle:
        image: gvenzl/oracle-xe:18.4.0-slim
        env:
          ORACLE_PASSWORD: oracle
        ports:
          - 1521:1521
        options: >-
          --health-cmd healthcheck.sh
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

    steps:
      - uses: actions/checkout@v2

      - name: Install utPLSQL
        run: sh ${{ github.workspace }}/scripts/1_install_utplsql.sh

      - name: Install demo project
        run: sh ${{ github.workspace }}/scripts/2_install_demo_project.sh

      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Maven deploy snapshot
        run: mvn org.jacoco:jacoco-maven-plugin:prepare-agent deploy
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v1.6

      - name: Sonar
        run: mvn sonar:sonar -Dsonar.projectKey=org.utplsql:utplsql-maven-plugin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
